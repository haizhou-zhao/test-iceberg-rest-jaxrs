/*
 * Apache Iceberg REST Catalog API
 * Defines the specification for the first version of the REST Catalog API. Implementations should ideally support both Iceberg table specs v1 and v2, with priority given to v2.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.model.CounterResult;
import org.openapitools.model.TimerResult;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * MetricResult
 */
@JsonPropertyOrder({
  MetricResult.JSON_PROPERTY_UNIT,
  MetricResult.JSON_PROPERTY_VALUE,
  MetricResult.JSON_PROPERTY_TIME_UNIT,
  MetricResult.JSON_PROPERTY_COUNT,
  MetricResult.JSON_PROPERTY_TOTAL_DURATION
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2023-02-09T17:36:38.183060-08:00[America/Los_Angeles]")
public class MetricResult   {
  public static final String JSON_PROPERTY_UNIT = "unit";
  @JsonProperty(JSON_PROPERTY_UNIT)
  private String unit;

  public static final String JSON_PROPERTY_VALUE = "value";
  @JsonProperty(JSON_PROPERTY_VALUE)
  private Long value;

  public static final String JSON_PROPERTY_TIME_UNIT = "time-unit";
  @JsonProperty(JSON_PROPERTY_TIME_UNIT)
  private String timeUnit;

  public static final String JSON_PROPERTY_COUNT = "count";
  @JsonProperty(JSON_PROPERTY_COUNT)
  private Long count;

  public static final String JSON_PROPERTY_TOTAL_DURATION = "total-duration";
  @JsonProperty(JSON_PROPERTY_TOTAL_DURATION)
  private Long totalDuration;

  public MetricResult unit(String unit) {
    this.unit = unit;
    return this;
  }

  /**
   * Get unit
   * @return unit
   **/
  @JsonProperty(value = "unit")
  @ApiModelProperty(required = true, value = "")
  @NotNull 
  public String getUnit() {
    return unit;
  }

  public void setUnit(String unit) {
    this.unit = unit;
  }

  public MetricResult value(Long value) {
    this.value = value;
    return this;
  }

  /**
   * Get value
   * @return value
   **/
  @JsonProperty(value = "value")
  @ApiModelProperty(required = true, value = "")
  @NotNull 
  public Long getValue() {
    return value;
  }

  public void setValue(Long value) {
    this.value = value;
  }

  public MetricResult timeUnit(String timeUnit) {
    this.timeUnit = timeUnit;
    return this;
  }

  /**
   * Get timeUnit
   * @return timeUnit
   **/
  @JsonProperty(value = "time-unit")
  @ApiModelProperty(required = true, value = "")
  @NotNull 
  public String getTimeUnit() {
    return timeUnit;
  }

  public void setTimeUnit(String timeUnit) {
    this.timeUnit = timeUnit;
  }

  public MetricResult count(Long count) {
    this.count = count;
    return this;
  }

  /**
   * Get count
   * @return count
   **/
  @JsonProperty(value = "count")
  @ApiModelProperty(required = true, value = "")
  @NotNull 
  public Long getCount() {
    return count;
  }

  public void setCount(Long count) {
    this.count = count;
  }

  public MetricResult totalDuration(Long totalDuration) {
    this.totalDuration = totalDuration;
    return this;
  }

  /**
   * Get totalDuration
   * @return totalDuration
   **/
  @JsonProperty(value = "total-duration")
  @ApiModelProperty(required = true, value = "")
  @NotNull 
  public Long getTotalDuration() {
    return totalDuration;
  }

  public void setTotalDuration(Long totalDuration) {
    this.totalDuration = totalDuration;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MetricResult metricResult = (MetricResult) o;
    return Objects.equals(this.unit, metricResult.unit) &&
        Objects.equals(this.value, metricResult.value) &&
        Objects.equals(this.timeUnit, metricResult.timeUnit) &&
        Objects.equals(this.count, metricResult.count) &&
        Objects.equals(this.totalDuration, metricResult.totalDuration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(unit, value, timeUnit, count, totalDuration);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MetricResult {\n");
    
    sb.append("    unit: ").append(toIndentedString(unit)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    timeUnit: ").append(toIndentedString(timeUnit)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    totalDuration: ").append(toIndentedString(totalDuration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

