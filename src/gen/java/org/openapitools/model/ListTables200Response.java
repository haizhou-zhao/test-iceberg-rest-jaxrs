/*
 * Apache Iceberg REST Catalog API
 * Defines the specification for the first version of the REST Catalog API. Implementations should ideally support both Iceberg table specs v1 and v2, with priority given to v2.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.LinkedHashSet;
import java.util.Set;
import org.openapitools.model.TableIdentifier;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * ListTables200Response
 */
@JsonPropertyOrder({
  ListTables200Response.JSON_PROPERTY_IDENTIFIERS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2023-02-09T17:36:38.183060-08:00[America/Los_Angeles]")
public class ListTables200Response   {
  public static final String JSON_PROPERTY_IDENTIFIERS = "identifiers";
  @JsonProperty(JSON_PROPERTY_IDENTIFIERS)
  private Set<TableIdentifier> identifiers = null;

  public ListTables200Response identifiers(Set<TableIdentifier> identifiers) {
    this.identifiers = identifiers;
    return this;
  }

  public ListTables200Response addIdentifiersItem(TableIdentifier identifiersItem) {
    if (this.identifiers == null) {
      this.identifiers = new LinkedHashSet<>();
    }
    this.identifiers.add(identifiersItem);
    return this;
  }

  /**
   * Get identifiers
   * @return identifiers
   **/
  @JsonProperty(value = "identifiers")
  @ApiModelProperty(value = "")
  @Valid 
  public Set<TableIdentifier> getIdentifiers() {
    return identifiers;
  }

  @JsonDeserialize(as = LinkedHashSet.class)
  public void setIdentifiers(Set<TableIdentifier> identifiers) {
    this.identifiers = identifiers;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListTables200Response listTables200Response = (ListTables200Response) o;
    return Objects.equals(this.identifiers, listTables200Response.identifiers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(identifiers);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListTables200Response {\n");
    
    sb.append("    identifiers: ").append(toIndentedString(identifiers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

