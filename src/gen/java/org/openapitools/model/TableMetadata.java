/*
 * Apache Iceberg REST Catalog API
 * Defines the specification for the first version of the REST Catalog API. Implementations should ideally support both Iceberg table specs v1 and v2, with priority given to v2.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.model.MetadataLogInner;
import org.openapitools.model.PartitionSpec;
import org.openapitools.model.Schema;
import org.openapitools.model.Snapshot;
import org.openapitools.model.SnapshotLogInner;
import org.openapitools.model.SnapshotReference;
import org.openapitools.model.SortOrder;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * TableMetadata
 */
@JsonPropertyOrder({
  TableMetadata.JSON_PROPERTY_FORMAT_VERSION,
  TableMetadata.JSON_PROPERTY_TABLE_UUID,
  TableMetadata.JSON_PROPERTY_LOCATION,
  TableMetadata.JSON_PROPERTY_LAST_UPDATED_MS,
  TableMetadata.JSON_PROPERTY_PROPERTIES,
  TableMetadata.JSON_PROPERTY_SCHEMAS,
  TableMetadata.JSON_PROPERTY_CURRENT_SCHEMA_ID,
  TableMetadata.JSON_PROPERTY_LAST_COLUMN_ID,
  TableMetadata.JSON_PROPERTY_PARTITION_SPECS,
  TableMetadata.JSON_PROPERTY_DEFAULT_SPEC_ID,
  TableMetadata.JSON_PROPERTY_LAST_PARTITION_ID,
  TableMetadata.JSON_PROPERTY_SORT_ORDERS,
  TableMetadata.JSON_PROPERTY_DEFAULT_SORT_ORDER_ID,
  TableMetadata.JSON_PROPERTY_SNAPSHOTS,
  TableMetadata.JSON_PROPERTY_REFS,
  TableMetadata.JSON_PROPERTY_CURRENT_SNAPSHOT_ID,
  TableMetadata.JSON_PROPERTY_SNAPSHOT_LOG,
  TableMetadata.JSON_PROPERTY_METADATA_LOG
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2023-02-09T17:36:38.183060-08:00[America/Los_Angeles]")
public class TableMetadata   {
  public static final String JSON_PROPERTY_FORMAT_VERSION = "format-version";
  @JsonProperty(JSON_PROPERTY_FORMAT_VERSION)
  private Integer formatVersion;

  public static final String JSON_PROPERTY_TABLE_UUID = "table-uuid";
  @JsonProperty(JSON_PROPERTY_TABLE_UUID)
  private String tableUuid;

  public static final String JSON_PROPERTY_LOCATION = "location";
  @JsonProperty(JSON_PROPERTY_LOCATION)
  private String location;

  public static final String JSON_PROPERTY_LAST_UPDATED_MS = "last-updated-ms";
  @JsonProperty(JSON_PROPERTY_LAST_UPDATED_MS)
  private Integer lastUpdatedMs;

  public static final String JSON_PROPERTY_PROPERTIES = "properties";
  @JsonProperty(JSON_PROPERTY_PROPERTIES)
  private Map<String, String> properties = null;

  public static final String JSON_PROPERTY_SCHEMAS = "schemas";
  @JsonProperty(JSON_PROPERTY_SCHEMAS)
  private List<Schema> schemas = null;

  public static final String JSON_PROPERTY_CURRENT_SCHEMA_ID = "current-schema-id";
  @JsonProperty(JSON_PROPERTY_CURRENT_SCHEMA_ID)
  private Integer currentSchemaId;

  public static final String JSON_PROPERTY_LAST_COLUMN_ID = "last-column-id";
  @JsonProperty(JSON_PROPERTY_LAST_COLUMN_ID)
  private Integer lastColumnId;

  public static final String JSON_PROPERTY_PARTITION_SPECS = "partition-specs";
  @JsonProperty(JSON_PROPERTY_PARTITION_SPECS)
  private List<PartitionSpec> partitionSpecs = null;

  public static final String JSON_PROPERTY_DEFAULT_SPEC_ID = "default-spec-id";
  @JsonProperty(JSON_PROPERTY_DEFAULT_SPEC_ID)
  private Integer defaultSpecId;

  public static final String JSON_PROPERTY_LAST_PARTITION_ID = "last-partition-id";
  @JsonProperty(JSON_PROPERTY_LAST_PARTITION_ID)
  private Integer lastPartitionId;

  public static final String JSON_PROPERTY_SORT_ORDERS = "sort-orders";
  @JsonProperty(JSON_PROPERTY_SORT_ORDERS)
  private List<SortOrder> sortOrders = null;

  public static final String JSON_PROPERTY_DEFAULT_SORT_ORDER_ID = "default-sort-order-id";
  @JsonProperty(JSON_PROPERTY_DEFAULT_SORT_ORDER_ID)
  private Integer defaultSortOrderId;

  public static final String JSON_PROPERTY_SNAPSHOTS = "snapshots";
  @JsonProperty(JSON_PROPERTY_SNAPSHOTS)
  private List<Snapshot> snapshots = null;

  public static final String JSON_PROPERTY_REFS = "refs";
  @JsonProperty(JSON_PROPERTY_REFS)
  private Map<String, SnapshotReference> refs = null;

  public static final String JSON_PROPERTY_CURRENT_SNAPSHOT_ID = "current-snapshot-id";
  @JsonProperty(JSON_PROPERTY_CURRENT_SNAPSHOT_ID)
  private Integer currentSnapshotId;

  public static final String JSON_PROPERTY_SNAPSHOT_LOG = "snapshot-log";
  @JsonProperty(JSON_PROPERTY_SNAPSHOT_LOG)
  private List<SnapshotLogInner> snapshotLog = null;

  public static final String JSON_PROPERTY_METADATA_LOG = "metadata-log";
  @JsonProperty(JSON_PROPERTY_METADATA_LOG)
  private List<MetadataLogInner> metadataLog = null;

  public TableMetadata formatVersion(Integer formatVersion) {
    this.formatVersion = formatVersion;
    return this;
  }

  /**
   * Get formatVersion
   * minimum: 1
   * maximum: 2
   * @return formatVersion
   **/
  @JsonProperty(value = "format-version")
  @ApiModelProperty(required = true, value = "")
  @NotNull  @Min(1) @Max(2)
  public Integer getFormatVersion() {
    return formatVersion;
  }

  public void setFormatVersion(Integer formatVersion) {
    this.formatVersion = formatVersion;
  }

  public TableMetadata tableUuid(String tableUuid) {
    this.tableUuid = tableUuid;
    return this;
  }

  /**
   * Get tableUuid
   * @return tableUuid
   **/
  @JsonProperty(value = "table-uuid")
  @ApiModelProperty(required = true, value = "")
  @NotNull 
  public String getTableUuid() {
    return tableUuid;
  }

  public void setTableUuid(String tableUuid) {
    this.tableUuid = tableUuid;
  }

  public TableMetadata location(String location) {
    this.location = location;
    return this;
  }

  /**
   * Get location
   * @return location
   **/
  @JsonProperty(value = "location")
  @ApiModelProperty(value = "")
  
  public String getLocation() {
    return location;
  }

  public void setLocation(String location) {
    this.location = location;
  }

  public TableMetadata lastUpdatedMs(Integer lastUpdatedMs) {
    this.lastUpdatedMs = lastUpdatedMs;
    return this;
  }

  /**
   * Get lastUpdatedMs
   * @return lastUpdatedMs
   **/
  @JsonProperty(value = "last-updated-ms")
  @ApiModelProperty(value = "")
  
  public Integer getLastUpdatedMs() {
    return lastUpdatedMs;
  }

  public void setLastUpdatedMs(Integer lastUpdatedMs) {
    this.lastUpdatedMs = lastUpdatedMs;
  }

  public TableMetadata properties(Map<String, String> properties) {
    this.properties = properties;
    return this;
  }

  public TableMetadata putPropertiesItem(String key, String propertiesItem) {
    if (this.properties == null) {
      this.properties = new HashMap<>();
    }
    this.properties.put(key, propertiesItem);
    return this;
  }

  /**
   * Get properties
   * @return properties
   **/
  @JsonProperty(value = "properties")
  @ApiModelProperty(value = "")
  
  public Map<String, String> getProperties() {
    return properties;
  }

  public void setProperties(Map<String, String> properties) {
    this.properties = properties;
  }

  public TableMetadata schemas(List<Schema> schemas) {
    this.schemas = schemas;
    return this;
  }

  public TableMetadata addSchemasItem(Schema schemasItem) {
    if (this.schemas == null) {
      this.schemas = new ArrayList<>();
    }
    this.schemas.add(schemasItem);
    return this;
  }

  /**
   * Get schemas
   * @return schemas
   **/
  @JsonProperty(value = "schemas")
  @ApiModelProperty(value = "")
  @Valid 
  public List<Schema> getSchemas() {
    return schemas;
  }

  public void setSchemas(List<Schema> schemas) {
    this.schemas = schemas;
  }

  public TableMetadata currentSchemaId(Integer currentSchemaId) {
    this.currentSchemaId = currentSchemaId;
    return this;
  }

  /**
   * Get currentSchemaId
   * @return currentSchemaId
   **/
  @JsonProperty(value = "current-schema-id")
  @ApiModelProperty(value = "")
  
  public Integer getCurrentSchemaId() {
    return currentSchemaId;
  }

  public void setCurrentSchemaId(Integer currentSchemaId) {
    this.currentSchemaId = currentSchemaId;
  }

  public TableMetadata lastColumnId(Integer lastColumnId) {
    this.lastColumnId = lastColumnId;
    return this;
  }

  /**
   * Get lastColumnId
   * @return lastColumnId
   **/
  @JsonProperty(value = "last-column-id")
  @ApiModelProperty(value = "")
  
  public Integer getLastColumnId() {
    return lastColumnId;
  }

  public void setLastColumnId(Integer lastColumnId) {
    this.lastColumnId = lastColumnId;
  }

  public TableMetadata partitionSpecs(List<PartitionSpec> partitionSpecs) {
    this.partitionSpecs = partitionSpecs;
    return this;
  }

  public TableMetadata addPartitionSpecsItem(PartitionSpec partitionSpecsItem) {
    if (this.partitionSpecs == null) {
      this.partitionSpecs = new ArrayList<>();
    }
    this.partitionSpecs.add(partitionSpecsItem);
    return this;
  }

  /**
   * Get partitionSpecs
   * @return partitionSpecs
   **/
  @JsonProperty(value = "partition-specs")
  @ApiModelProperty(value = "")
  @Valid 
  public List<PartitionSpec> getPartitionSpecs() {
    return partitionSpecs;
  }

  public void setPartitionSpecs(List<PartitionSpec> partitionSpecs) {
    this.partitionSpecs = partitionSpecs;
  }

  public TableMetadata defaultSpecId(Integer defaultSpecId) {
    this.defaultSpecId = defaultSpecId;
    return this;
  }

  /**
   * Get defaultSpecId
   * @return defaultSpecId
   **/
  @JsonProperty(value = "default-spec-id")
  @ApiModelProperty(value = "")
  
  public Integer getDefaultSpecId() {
    return defaultSpecId;
  }

  public void setDefaultSpecId(Integer defaultSpecId) {
    this.defaultSpecId = defaultSpecId;
  }

  public TableMetadata lastPartitionId(Integer lastPartitionId) {
    this.lastPartitionId = lastPartitionId;
    return this;
  }

  /**
   * Get lastPartitionId
   * @return lastPartitionId
   **/
  @JsonProperty(value = "last-partition-id")
  @ApiModelProperty(value = "")
  
  public Integer getLastPartitionId() {
    return lastPartitionId;
  }

  public void setLastPartitionId(Integer lastPartitionId) {
    this.lastPartitionId = lastPartitionId;
  }

  public TableMetadata sortOrders(List<SortOrder> sortOrders) {
    this.sortOrders = sortOrders;
    return this;
  }

  public TableMetadata addSortOrdersItem(SortOrder sortOrdersItem) {
    if (this.sortOrders == null) {
      this.sortOrders = new ArrayList<>();
    }
    this.sortOrders.add(sortOrdersItem);
    return this;
  }

  /**
   * Get sortOrders
   * @return sortOrders
   **/
  @JsonProperty(value = "sort-orders")
  @ApiModelProperty(value = "")
  @Valid 
  public List<SortOrder> getSortOrders() {
    return sortOrders;
  }

  public void setSortOrders(List<SortOrder> sortOrders) {
    this.sortOrders = sortOrders;
  }

  public TableMetadata defaultSortOrderId(Integer defaultSortOrderId) {
    this.defaultSortOrderId = defaultSortOrderId;
    return this;
  }

  /**
   * Get defaultSortOrderId
   * @return defaultSortOrderId
   **/
  @JsonProperty(value = "default-sort-order-id")
  @ApiModelProperty(value = "")
  
  public Integer getDefaultSortOrderId() {
    return defaultSortOrderId;
  }

  public void setDefaultSortOrderId(Integer defaultSortOrderId) {
    this.defaultSortOrderId = defaultSortOrderId;
  }

  public TableMetadata snapshots(List<Snapshot> snapshots) {
    this.snapshots = snapshots;
    return this;
  }

  public TableMetadata addSnapshotsItem(Snapshot snapshotsItem) {
    if (this.snapshots == null) {
      this.snapshots = new ArrayList<>();
    }
    this.snapshots.add(snapshotsItem);
    return this;
  }

  /**
   * Get snapshots
   * @return snapshots
   **/
  @JsonProperty(value = "snapshots")
  @ApiModelProperty(value = "")
  @Valid 
  public List<Snapshot> getSnapshots() {
    return snapshots;
  }

  public void setSnapshots(List<Snapshot> snapshots) {
    this.snapshots = snapshots;
  }

  public TableMetadata refs(Map<String, SnapshotReference> refs) {
    this.refs = refs;
    return this;
  }

  public TableMetadata putRefsItem(String key, SnapshotReference refsItem) {
    if (this.refs == null) {
      this.refs = new HashMap<>();
    }
    this.refs.put(key, refsItem);
    return this;
  }

  /**
   * Get refs
   * @return refs
   **/
  @JsonProperty(value = "refs")
  @ApiModelProperty(value = "")
  @Valid 
  public Map<String, SnapshotReference> getRefs() {
    return refs;
  }

  public void setRefs(Map<String, SnapshotReference> refs) {
    this.refs = refs;
  }

  public TableMetadata currentSnapshotId(Integer currentSnapshotId) {
    this.currentSnapshotId = currentSnapshotId;
    return this;
  }

  /**
   * Get currentSnapshotId
   * @return currentSnapshotId
   **/
  @JsonProperty(value = "current-snapshot-id")
  @ApiModelProperty(value = "")
  
  public Integer getCurrentSnapshotId() {
    return currentSnapshotId;
  }

  public void setCurrentSnapshotId(Integer currentSnapshotId) {
    this.currentSnapshotId = currentSnapshotId;
  }

  public TableMetadata snapshotLog(List<SnapshotLogInner> snapshotLog) {
    this.snapshotLog = snapshotLog;
    return this;
  }

  public TableMetadata addSnapshotLogItem(SnapshotLogInner snapshotLogItem) {
    if (this.snapshotLog == null) {
      this.snapshotLog = new ArrayList<>();
    }
    this.snapshotLog.add(snapshotLogItem);
    return this;
  }

  /**
   * Get snapshotLog
   * @return snapshotLog
   **/
  @JsonProperty(value = "snapshot-log")
  @ApiModelProperty(value = "")
  @Valid 
  public List<SnapshotLogInner> getSnapshotLog() {
    return snapshotLog;
  }

  public void setSnapshotLog(List<SnapshotLogInner> snapshotLog) {
    this.snapshotLog = snapshotLog;
  }

  public TableMetadata metadataLog(List<MetadataLogInner> metadataLog) {
    this.metadataLog = metadataLog;
    return this;
  }

  public TableMetadata addMetadataLogItem(MetadataLogInner metadataLogItem) {
    if (this.metadataLog == null) {
      this.metadataLog = new ArrayList<>();
    }
    this.metadataLog.add(metadataLogItem);
    return this;
  }

  /**
   * Get metadataLog
   * @return metadataLog
   **/
  @JsonProperty(value = "metadata-log")
  @ApiModelProperty(value = "")
  @Valid 
  public List<MetadataLogInner> getMetadataLog() {
    return metadataLog;
  }

  public void setMetadataLog(List<MetadataLogInner> metadataLog) {
    this.metadataLog = metadataLog;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TableMetadata tableMetadata = (TableMetadata) o;
    return Objects.equals(this.formatVersion, tableMetadata.formatVersion) &&
        Objects.equals(this.tableUuid, tableMetadata.tableUuid) &&
        Objects.equals(this.location, tableMetadata.location) &&
        Objects.equals(this.lastUpdatedMs, tableMetadata.lastUpdatedMs) &&
        Objects.equals(this.properties, tableMetadata.properties) &&
        Objects.equals(this.schemas, tableMetadata.schemas) &&
        Objects.equals(this.currentSchemaId, tableMetadata.currentSchemaId) &&
        Objects.equals(this.lastColumnId, tableMetadata.lastColumnId) &&
        Objects.equals(this.partitionSpecs, tableMetadata.partitionSpecs) &&
        Objects.equals(this.defaultSpecId, tableMetadata.defaultSpecId) &&
        Objects.equals(this.lastPartitionId, tableMetadata.lastPartitionId) &&
        Objects.equals(this.sortOrders, tableMetadata.sortOrders) &&
        Objects.equals(this.defaultSortOrderId, tableMetadata.defaultSortOrderId) &&
        Objects.equals(this.snapshots, tableMetadata.snapshots) &&
        Objects.equals(this.refs, tableMetadata.refs) &&
        Objects.equals(this.currentSnapshotId, tableMetadata.currentSnapshotId) &&
        Objects.equals(this.snapshotLog, tableMetadata.snapshotLog) &&
        Objects.equals(this.metadataLog, tableMetadata.metadataLog);
  }

  @Override
  public int hashCode() {
    return Objects.hash(formatVersion, tableUuid, location, lastUpdatedMs, properties, schemas, currentSchemaId, lastColumnId, partitionSpecs, defaultSpecId, lastPartitionId, sortOrders, defaultSortOrderId, snapshots, refs, currentSnapshotId, snapshotLog, metadataLog);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TableMetadata {\n");
    
    sb.append("    formatVersion: ").append(toIndentedString(formatVersion)).append("\n");
    sb.append("    tableUuid: ").append(toIndentedString(tableUuid)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    lastUpdatedMs: ").append(toIndentedString(lastUpdatedMs)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    schemas: ").append(toIndentedString(schemas)).append("\n");
    sb.append("    currentSchemaId: ").append(toIndentedString(currentSchemaId)).append("\n");
    sb.append("    lastColumnId: ").append(toIndentedString(lastColumnId)).append("\n");
    sb.append("    partitionSpecs: ").append(toIndentedString(partitionSpecs)).append("\n");
    sb.append("    defaultSpecId: ").append(toIndentedString(defaultSpecId)).append("\n");
    sb.append("    lastPartitionId: ").append(toIndentedString(lastPartitionId)).append("\n");
    sb.append("    sortOrders: ").append(toIndentedString(sortOrders)).append("\n");
    sb.append("    defaultSortOrderId: ").append(toIndentedString(defaultSortOrderId)).append("\n");
    sb.append("    snapshots: ").append(toIndentedString(snapshots)).append("\n");
    sb.append("    refs: ").append(toIndentedString(refs)).append("\n");
    sb.append("    currentSnapshotId: ").append(toIndentedString(currentSnapshotId)).append("\n");
    sb.append("    snapshotLog: ").append(toIndentedString(snapshotLog)).append("\n");
    sb.append("    metadataLog: ").append(toIndentedString(metadataLog)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

