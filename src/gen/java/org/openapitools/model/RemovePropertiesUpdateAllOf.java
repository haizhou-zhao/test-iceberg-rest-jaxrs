/*
 * Apache Iceberg REST Catalog API
 * Defines the specification for the first version of the REST Catalog API. Implementations should ideally support both Iceberg table specs v1 and v2, with priority given to v2.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * RemovePropertiesUpdateAllOf
 */
@JsonPropertyOrder({
  RemovePropertiesUpdateAllOf.JSON_PROPERTY_REMOVALS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2023-02-09T17:36:38.183060-08:00[America/Los_Angeles]")
public class RemovePropertiesUpdateAllOf   {
  public static final String JSON_PROPERTY_REMOVALS = "removals";
  @JsonProperty(JSON_PROPERTY_REMOVALS)
  private List<String> removals = new ArrayList<>();

  public RemovePropertiesUpdateAllOf removals(List<String> removals) {
    this.removals = removals;
    return this;
  }

  public RemovePropertiesUpdateAllOf addRemovalsItem(String removalsItem) {
    this.removals.add(removalsItem);
    return this;
  }

  /**
   * Get removals
   * @return removals
   **/
  @JsonProperty(value = "removals")
  @ApiModelProperty(required = true, value = "")
  @NotNull 
  public List<String> getRemovals() {
    return removals;
  }

  public void setRemovals(List<String> removals) {
    this.removals = removals;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RemovePropertiesUpdateAllOf removePropertiesUpdateAllOf = (RemovePropertiesUpdateAllOf) o;
    return Objects.equals(this.removals, removePropertiesUpdateAllOf.removals);
  }

  @Override
  public int hashCode() {
    return Objects.hash(removals);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RemovePropertiesUpdateAllOf {\n");
    
    sb.append("    removals: ").append(toIndentedString(removals)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

