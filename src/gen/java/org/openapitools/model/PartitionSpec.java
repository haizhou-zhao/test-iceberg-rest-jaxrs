/*
 * Apache Iceberg REST Catalog API
 * Defines the specification for the first version of the REST Catalog API. Implementations should ideally support both Iceberg table specs v1 and v2, with priority given to v2.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.model.PartitionField;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * PartitionSpec
 */
@JsonPropertyOrder({
  PartitionSpec.JSON_PROPERTY_SPEC_ID,
  PartitionSpec.JSON_PROPERTY_FIELDS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2023-02-09T17:36:38.183060-08:00[America/Los_Angeles]")
public class PartitionSpec   {
  public static final String JSON_PROPERTY_SPEC_ID = "spec-id";
  @JsonProperty(JSON_PROPERTY_SPEC_ID)
  private Integer specId;

  public static final String JSON_PROPERTY_FIELDS = "fields";
  @JsonProperty(JSON_PROPERTY_FIELDS)
  private List<PartitionField> fields = new ArrayList<>();

  public PartitionSpec specId(Integer specId) {
    this.specId = specId;
    return this;
  }

  /**
   * Get specId
   * @return specId
   **/
  @JsonProperty(value = "spec-id", access = JsonProperty.Access.READ_ONLY)
  @ApiModelProperty(value = "")
  
  public Integer getSpecId() {
    return specId;
  }

  public void setSpecId(Integer specId) {
    this.specId = specId;
  }

  public PartitionSpec fields(List<PartitionField> fields) {
    this.fields = fields;
    return this;
  }

  public PartitionSpec addFieldsItem(PartitionField fieldsItem) {
    this.fields.add(fieldsItem);
    return this;
  }

  /**
   * Get fields
   * @return fields
   **/
  @JsonProperty(value = "fields")
  @ApiModelProperty(required = true, value = "")
  @NotNull @Valid 
  public List<PartitionField> getFields() {
    return fields;
  }

  public void setFields(List<PartitionField> fields) {
    this.fields = fields;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PartitionSpec partitionSpec = (PartitionSpec) o;
    return Objects.equals(this.specId, partitionSpec.specId) &&
        Objects.equals(this.fields, partitionSpec.fields);
  }

  @Override
  public int hashCode() {
    return Objects.hash(specId, fields);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PartitionSpec {\n");
    
    sb.append("    specId: ").append(toIndentedString(specId)).append("\n");
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

